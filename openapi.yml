openapi: '3.0.2'
info:
  title: Risiko-Radar
  description: | 
    Collection of all security related APIs for Germany.
    Supplying the information to anxiety frontend.
  version: '0.2'
servers:
  - url: http://api.risiko-radar.de

tags:
  - name: dashboard
    description: 'Retrieving information for the dashboard'
  - name: map
    description: "Retrieving information for the map of germany"
  - name: world-map
    description: "Retrieving information for the worldmap"

paths:
  /dashboard:
    get:
      tags:
        - dashboard
      description: 'Get all dashboard items.'
      parameters: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/dashboardItem'
  /dashboard/{id}:
    get:
      tags:
        - dashboard
      description: 'Get a dashboard item by id.'
      parameters:
        - name: id
          in: path
          description: 'ID of the dashboard item to get.'
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dashboardItemDetails'
        '404':
          description: Not Found
  /dashboard/update:
    get:
      tags:
        - dashboard
      description: ''
      parameters:
        - name: timestamp
          in: query
          description: 'Timestamp of the last update.'
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  add:
                    type: array
                    items:
                      $ref: '#/components/schemas/dashboardItem'
                  delete:
                    type: array
                    items:
                      type: string
                    description: 'List of IDs to delete.'
        '204':
          description: No Content

  /map:
    get:
      tags:
        - map
      description: 'Get all map items.'
      parameters: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/mapItem'
  /map/{id}:
    get:
      tags:
        - map
      description: 'Get a map item by id.'
      parameters:
        - name: id
          in: path
          description: 'ID of the map item to get.'
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/mapItemDetails'
        '404':
          description: Not Found
  /map/update:
    get:
      tags:
        - map
      description: ''
      parameters:
        - name: timestamp
          in: query
          description: 'Timestamp of the last update.'
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  add:
                    type: array
                    items:
                      $ref: '#/components/schemas/dashboardItem'
                  delete:
                    type: array
                    items:
                      type: string
                    description: 'List of IDs to delete.'
        '204':
          description: No Content
  /world-map:
    get:
      tags:
        - world-map
      description: 'Get all world-map items.'
      parameters: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/worldMapItem'
  /world-map/{id}:
    get:
      tags:
        - world-map
      description: 'Get a WorldMap item by id.'
      parameters:
        - name: id
          in: path
          description: 'ID of the WorldMap item to get.'
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/worldMapItemDetails'
        '404':
          description: Not Found
  /world-map/update:
    get:
      tags:
        - world-map
      description: ''
      parameters:
        - name: timestamp
          in: query
          description: 'Timestamp of the last update.'
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  add:
                    type: array
                    items:
                      $ref: '#/components/schemas/dashboardItem'
                  delete:
                    type: array
                    items:
                      type: string
                    description: 'List of IDs to delete.'
        '204':
          description: No Content

components:
  schemas:
    dashboardItem:
      type: object
      properties:
        id:
          type: string
        type:
          type: string
          enum:
            - food_warning
            - product_warning
            - embassy
        title:
          type: string
        area:
          type: array
          items:
            type: string
            description: Bundesland
          nullable: true
        publishedDate:
          type: string
          format: timestamp
          nullable: true
        country:
          type: string
          nullable: true
        city:
          type: string
          nullable: true
    dashboardItemDetails:
      oneOf:
        - type: object
          properties:
            title:
              type: string
            description:
              type: string
              nullable: true
            link:
              type: string
              nullable: true
            manufacturer:
              type: string
              nullable: true
            image:
              type: string
              description: 'URL to the image.'
              nullable: true
            type:
              type: string
              enum:
                - food_warning
                - product_warning
        - type: object
          properties:
            address:
              type: string
              nullable: true
            phone:
              type: string
              nullable: true
            mail:
              type: string
              nullable: true
            type:
              type: string
              enum:
                - embassy
    mapItem:
      type: object
      properties:
        id:
          type: string
        type:
          type: string
          enum:
            - nina
            - street_report
            - weather
        warning:
          type: string
        title:
          type: string
        area:
          type: array
          description: 'Array for multiple polygons.'
          items:
            type: array
            description: 'Array for a single polygon.'
            items:
              type: array
              description: 'Array for a single point.'
              maxLength: 2
              items:
                type: number
    mapItemDetails:
      oneOf:
        - type: object
          properties:
            description:
              type: string
            instruction:
              type: string
            type:
              type: string
              enum:
                - weather
        - type: object
          properties:
            description:
              type: string
            type:
              type: string
              enum:
                - nina
                - street_report

    worldMapItem:
      type: object
      properties:
        id:
          type: string
        type:
          type: string
          enum:
            - travel_warning
        country:
          type: string
        severity:
          type: string
        iso3: 
          type: string
    worldMapItemDetails:
      type: object
      properties:
        type:
          type: string
          enum:
            - travel_warning
        aktuell:
          type: array
          items:
            type: string
        sicherheit:
          type: array
          items:
            type: string
        gesundheit:
          type: array
          items:
            type: string
